buildscript{
//    ext{
//        springBootVersion = '1.4.2.Release'
//    }
    repositories{
        mavenCentral()
        mavenLocal()
        maven { url "https://repo.spring.io/libs-milestone" }
        maven { url "https://repo.spring.io/libs-snapshot" }
        maven {
            url "https://nexus.mm.meshkorea.net/repository/maven-public/"

            credentials {
                username meshRepoUser
                password meshRepoPassword
            }
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}



apply plugin : 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://repo.spring.io/libs-milestone" }
    maven { url "https://repo.spring.io/libs-snapshot" }
    maven {
        url "https://nexus.mm.meshkorea.net/repository/maven-public/"

        credentials {
            username meshRepoUser
            password meshRepoPassword
        }
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa') //스프링 부트용 Spring Data Jpa 추상화 라이브러리
    compile('org.projectlombok:lombok')
    compile('com.h2database:h2') //인메모리 관계형 데이터베이스, 메모리에서 실행되기 때문에 애플리케이션을 실행할때마다 초기화
    compile('org.springframework.session:spring-session-jdbc')
    compile('org.springframework.boot:spring-boot-starter-web') //버전을 명시하지 않아야 맨위에 작성한 springBootVersion 변수에서 정한 버전을 따라간다.
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile group: 'junit', name: 'junit', version: '4.12'
}
