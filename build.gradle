buildscript{
    repositories{
        maven {
            url "https://nexus.mm.meshkorea.net/repository/maven-public/"

            credentials {
                username meshRepoUser
                password meshRepoPassword
            }
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin : 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

configure(allprojects) { project ->
    group = 'com.vroong.newbee'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "https://repo.spring.io/libs-milestone" }
        maven { url "https://repo.spring.io/libs-snapshot" }
        maven {
            url "https://nexus.mm.meshkorea.net/repository/maven-public/"

            credentials {
                username meshRepoUser
                password meshRepoPassword
            }
        }
    }

    buildscript {
        repositories {
            mavenCentral()
            jcenter()
            maven { url 'https://repo.spring.io/plugins-release' }
        }
    }
}

version '1.0-SNAPSHOT'


//project(':vroong-newbee-apiapplication'){
//    dependencies {
//        compile project(':vroong-newbee-application')
//    }
//}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa') //스프링 부트용 Spring Data Jpa 추상화 라이브러리
    compile('org.projectlombok:lombok')
    compile('com.h2database:h2') //인메모리 관계형 데이터베이스, 메모리에서 실행되기 때문에 애플리케이션을 실행할때마다 초기화
    compile('org.springframework.session:spring-session-jdbc')
    compile('org.springframework.boot:spring-boot-starter-web') //버전을 명시하지 않아야 맨위에 작성한 springBootVersion 변수에서 정한 버전을 따라간다.
    testCompile('org.springframework.boot:spring-boot-starter-test')
}
